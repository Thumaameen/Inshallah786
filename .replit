modules = ["nodejs-20", "web", "bash"]
run = "npm start"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-25_05"
packages = ["libuuid", "cairo", "pango", "giflib", "jq", "python3", "gcc", "pkgconf", "pixman", "railway", "gnome-secrets"]

[deployment]
deploymentTarget = "cloudrun"
run = ["sh", "-c", "npm start"]
build = ["sh", "-c", "npm run build"]

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 43165
externalPort = 3001

[[ports]]
localPort = 44645
externalPort = 4200

[[ports]]
localPort = 45789
externalPort = 3002

[[ports]]
localPort = 45993
externalPort = 6000

[env]
PORT = "5000"
NODE_ENV = "production"

[agent]
integrations = ["javascript_database:1.0.0", "javascript_openai:1.0.0", "javascript_websocket:1.0.0", "javascript_object_storage:1.0.0", "github:1.0.0"]
expertMode = true

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Server"

[[workflows.workflow]]
name = "Server"
author = "agent"

[workflows.workflow.metadata]
outputType = "webview"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Production Build & Start"
author = 49189426
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸš€ DHA Production Build & Deployment\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=====================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸ“¦ Installing dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install --legacy-peer-deps --no-optional"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸ”§ Building server with monitoring...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsc -p tsconfig.json --skipLibCheck"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸŽ¨ Building client...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd client && npm install --legacy-peer-deps && npm run build && cd .."

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"âœ… Build complete!\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸš€ Starting production server...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "NODE_ENV=production PORT=5000 HOST=0.0.0.0 npm start"

[[workflows.workflow]]
name = "Test All API Keys"
author = 49200153
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸ§ª Testing All API Keys and Integrations\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"========================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx test-all-api-keys.ts"

[[workflows.workflow]]
name = "Test Render Deployment"
author = 49200153
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ðŸ§ª COMPREHENSIVE RENDER DEPLOYMENT TEST\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"========================================\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm install --legacy-peer-deps --no-optional"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run test:render"
